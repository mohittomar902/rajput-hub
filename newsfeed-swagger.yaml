openapi: 3.0.0
info:
  title: Newsfeed API
  version: 1.0.0
  description: API for user authentication and Instagram-like news feed
servers:
  - url: https://rajput-hub.onrender.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        fName:
          type: string
        lName:
          type: string
        phoneNumber:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        content:
          type: string
        imageUrl:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        likes:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    Comment:
      type: object
      properties:
        username:
          type: string
        text:
          type: string
        createdAt:
          type: string
          format: date-time
paths:
  /login:
    post:
      summary: Login with username or email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Username or email
                password:
                  type: string
              required:
                - login
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        '401':
          description: Invalid credentials
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Registration successful
        '403':
          description: User already exists
  /get-user-profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /newsfeed/posts:
    get:
      summary: Get all posts (news feed)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                imageUrl:
                  type: string
                  nullable: true
              required:
                - content
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /newsfeed/posts/{postId}:
    put:
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                imageUrl:
                  type: string
                  nullable: true
      responses:
        '200':
          description: Post updated
        '403':
          description: Unauthorized
        '404':
          description: Post not found
    delete:
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deleted
        '403':
          description: Unauthorized
        '404':
          description: Post not found
  /newsfeed/posts/{postId}/like:
    post:
      summary: Like a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post liked
        '404':
          description: Post not found
  /newsfeed/posts/{postId}/comment:
    post:
      summary: Comment on a post
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
                - text
      responses:
        '200':
          description: Comment added
        '404':
          description: Post not found 